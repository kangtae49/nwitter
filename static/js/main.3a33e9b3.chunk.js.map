{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","nweetArray","docs","map","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","nw","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","Navigation","to","AppRouter","isLogginedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a33e9b3.chunk.js","sourcesContent":["// import * as firebase from 'firebase/app';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore';\nimport 'firebase/firebase-storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  // databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import { authService, firebaseInstance } from 'fbase';\nimport React, { useState } from 'react';\n\nfunction Auth() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password,\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n      setError(err.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n    // console.log(event.target.name);\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        ></input>\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value={newAccount ? 'New Account' : 'Log In'} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </span>\n      <button onClick={onSocialClick} name=\"google\">\n        Continue with Google\n      </button>\n      <button onClick={onSocialClick} name=\"github\">\n        Continue with Github\n      </button>\n    </div>\n  );\n}\n\nexport default Auth;\n","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\n\nfunction Nweet({ nweetObj, isOwner }) {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onClick = async () => {\n    const ok = window.confirm('are you sure?');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      //   console.log(nweetObj.id, isOwner, ok);\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input type=\"text\" value={newNweet} onChange={onChange} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onClick}>delete</button>\n              <button onClick={toggleEditing}>edit</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Nweet;\n","import Nweet from 'components/Nweet';\nimport { dbService, storageService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Home({ userObj }) {\n  const [nweet, setNweet] = useState('');\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState('');\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    // await dbService.collection('nweets').add({\n    //   text: nweet,\n    //   createdAt: Date.now(),\n    //   creatorId: userObj.uid,\n    // });\n    // setNweet('');\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    await dbService.collection('nweets').add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          onChange={onChange}\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          value={nweet}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <div>\n        {nweets.map((nw) => (\n          <Nweet\n            key={nw.id}\n            nweetObj={nw}\n            isOwner={nw.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { authService, dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\n// import { useHistory } from 'react-router-dom';\n\nfunction Profile({ refreshUser, userObj }) {\n  // const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogoutClick = () => {\n    authService.signOut();\n    // history.push('/');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt')\n      .get();\n    // console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      console.log(refreshUser);\n      refreshUser();\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogoutClick}>Log Out</button>\n    </>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navigation({ userObj }) {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from 'components/Navigation';\n\nfunction AppRouter({ refreshUser, isLogginedIn, userObj }) {\n  return (\n    <Router>\n      {isLogginedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLogginedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\n\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  // console.log(authService.currentUser);\n  // console.log(authService.curr);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = async () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLogginedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Init...'\n      )}\n      <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}